{"ast":null,"code":"var _jsxFileName = \"/media/nvme0n1p3/My Projects/Full_Stack/Auth/front-end/src/pages/PasswordResetLandingPage.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { PasswordResetFail } from './PasswordResetFail';\nimport { PasswordResetSuccess } from './PasswordResetSuccess';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PasswordResetLandingPage = () => {\n  _s();\n  const [passwordValue, setPasswordValue] = useState('');\n  const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isFailure, setIsFailure] = useState(false);\n  const {\n    passwordResetCode\n  } = useParams();\n  const navigate = useNavigate();\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      await axios.put(`http://localhost:8080/api/users/${passwordResetCode}/reset-password`, {\n        newPassword: passwordValue\n      });\n      setIsSuccess(true);\n      setTimeout(() => {\n        navigate('/login');\n      }, 3000);\n    } catch (error) {\n      setIsFailure(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (isFailure) {\n    return /*#__PURE__*/_jsxDEV(PasswordResetFail, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  if (isSuccess) {\n    return /*#__PURE__*/_jsxDEV(PasswordResetSuccess, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'white'\n      },\n      children: \"Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter your new password below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: passwordValue,\n        onChange: e => setPasswordValue(e.target.value),\n        placeholder: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPasswordValue,\n        onChange: e => setConfirmPasswordValue(e.target.value),\n        placeholder: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading || !passwordValue || !confirmPasswordValue || passwordValue !== confirmPasswordValue,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordResetLandingPage, \"vbQ5jql2FM7pOIMZCcc8eU2/tXc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PasswordResetLandingPage;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetLandingPage\");","map":{"version":3,"names":["axios","useState","useNavigate","useParams","PasswordResetFail","PasswordResetSuccess","jsxDEV","_jsxDEV","PasswordResetLandingPage","_s","passwordValue","setPasswordValue","confirmPasswordValue","setConfirmPasswordValue","isLoading","setIsLoading","isSuccess","setIsSuccess","isFailure","setIsFailure","passwordResetCode","navigate","handleResetPassword","e","preventDefault","put","newPassword","setTimeout","error","fileName","_jsxFileName","lineNumber","columnNumber","className","children","style","color","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/media/nvme0n1p3/My Projects/Full_Stack/Auth/front-end/src/pages/PasswordResetLandingPage.js"],"sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { PasswordResetFail } from './PasswordResetFail';\nimport { PasswordResetSuccess } from './PasswordResetSuccess';\n\nexport const PasswordResetLandingPage = () => {\n  const [passwordValue, setPasswordValue] = useState('');\n  const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isFailure, setIsFailure] = useState(false);\n  const { passwordResetCode } = useParams();\n  const navigate = useNavigate();\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      await axios.put(\n        `http://localhost:8080/api/users/${passwordResetCode}/reset-password`,\n        {\n          newPassword: passwordValue,\n        }\n      );\n      setIsSuccess(true);\n      setTimeout(() => {\n        navigate('/login');\n      }, 3000);\n    } catch (error) {\n      setIsFailure(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isFailure) {\n    return <PasswordResetFail />;\n  }\n\n  if (isSuccess) {\n    return <PasswordResetSuccess />;\n  }\n\n  return (\n    <div className=\"content-container\">\n      <h1 style={{ color: 'white' }}>Password Reset</h1>\n      <p>Please enter your new password below.</p>\n      <form onSubmit={handleResetPassword}>\n        <input\n          type=\"password\"\n          value={passwordValue}\n          onChange={(e) => setPasswordValue(e.target.value)}\n          placeholder=\"New Password\"\n        />\n        <input\n          type=\"password\"\n          value={confirmPasswordValue}\n          onChange={(e) => setConfirmPasswordValue(e.target.value)}\n          placeholder=\"Confirm Password\"\n        />\n        <button\n          type=\"submit\"\n          disabled={\n            isLoading ||\n            !passwordValue ||\n            !confirmPasswordValue ||\n            passwordValue !== confirmPasswordValue\n          }\n        >\n          Reset Password\n        </button>\n      </form>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}