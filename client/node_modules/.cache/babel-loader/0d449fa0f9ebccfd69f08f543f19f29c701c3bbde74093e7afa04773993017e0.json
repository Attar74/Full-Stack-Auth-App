{"ast":null,"code":"var _jsxFileName = \"/media/nvme0n1p3/My Projects/Full_Stack/Auth/front-end/src/pages/EmailVerification.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useToken } from '../auth/useToken';\nimport { EmailverificationFail } from './EmailverificationFail';\nimport { EmailverificationSuccess } from './EmailverificationSuccess';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EmailVerification = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('verification Failed, Please try again');\n  const [errorDescription, setErrorDescription] = useState('Please try again. If the problem persists, please contact support.');\n  const [, setToken] = useToken();\n  const {\n    verificationCode\n  } = useParams();\n  const hasRun = useRef(false); // 🛡️ Prevent duplicate effect in dev\n\n  useEffect(() => {\n    if (hasRun.current || !verificationCode) return;\n    hasRun.current = true;\n    const verifyEmail = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.put(`http://localhost:8080/api/verify-email`, {\n          verificationCode\n        });\n        const {\n          token\n        } = response.data;\n        setToken(token);\n        setIsSuccess(true);\n      } catch (error) {\n        var _error$response, _error$response$data, _error$response2, _error$response2$data;\n        console.error(error);\n        setErrorMessage((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Unknown error');\n        setErrorDescription((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.description) || '');\n        setIsSuccess(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    verifyEmail();\n  }, [verificationCode, setToken]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 25\n  }, this);\n  if (!isSuccess) return /*#__PURE__*/_jsxDEV(EmailverificationFail, {\n    msg: errorMessage,\n    description: errorDescription\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(EmailverificationSuccess, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n};\n_s(EmailVerification, \"fgFa0BxGuMUPpDQyfTyf3DK1qaU=\", false, function () {\n  return [useToken, useParams];\n});\n_c = EmailVerification;\nvar _c;\n$RefreshReg$(_c, \"EmailVerification\");","map":{"version":3,"names":["axios","useEffect","useRef","useState","useParams","useToken","EmailverificationFail","EmailverificationSuccess","jsxDEV","_jsxDEV","EmailVerification","_s","isLoading","setIsLoading","isSuccess","setIsSuccess","errorMessage","setErrorMessage","errorDescription","setErrorDescription","setToken","verificationCode","hasRun","current","verifyEmail","response","put","token","data","error","_error$response","_error$response$data","_error$response2","_error$response2$data","console","message","description","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","_c","$RefreshReg$"],"sources":["/media/nvme0n1p3/My Projects/Full_Stack/Auth/front-end/src/pages/EmailVerification.js"],"sourcesContent":["import axios from 'axios';\nimport { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useToken } from '../auth/useToken';\nimport { EmailverificationFail } from './EmailverificationFail';\nimport { EmailverificationSuccess } from './EmailverificationSuccess';\n\nexport const EmailVerification = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\n    'verification Failed, Please try again'\n  );\n  const [errorDescription, setErrorDescription] = useState(\n    'Please try again. If the problem persists, please contact support.'\n  );\n  const [, setToken] = useToken();\n  const { verificationCode } = useParams();\n\n  const hasRun = useRef(false); // 🛡️ Prevent duplicate effect in dev\n\n  useEffect(() => {\n    if (hasRun.current || !verificationCode) return;\n    hasRun.current = true;\n\n    const verifyEmail = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.put(\n          `http://localhost:8080/api/verify-email`,\n          { verificationCode }\n        );\n        const { token } = response.data;\n        setToken(token);\n        setIsSuccess(true);\n      } catch (error) {\n        console.error(error);\n        setErrorMessage(error?.response?.data?.message || 'Unknown error');\n        setErrorDescription(error?.response?.data?.description || '');\n        setIsSuccess(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    verifyEmail();\n  }, [verificationCode, setToken]);\n\n  if (isLoading) return <div>Loading...</div>;\n  if (!isSuccess)\n    return (\n      <EmailverificationFail\n        msg={errorMessage}\n        description={errorDescription}\n      />\n    );\n  return <EmailverificationSuccess />;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}