{"ast":null,"code":"var _jsxFileName = \"/media/nvme0n1p3/My Projects/Full_Stack/Auth/front-end/src/pages/UserInfoPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useToken } from '../auth/useToken';\nimport { useUser } from '../auth/useUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserInfoPage = () => {\n  _s();\n  const [, setToken] = useToken();\n  const [user] = useUser();\n  const {\n    id,\n    username,\n    email,\n    password\n  } = user;\n\n  // We'll use the navigate function to navigate the user\n  // programmatically later on (we're not using it yet)\n  const navigate = useNavigate();\n\n  // These states are bound to the values of the text inputs\n  // on the page (see JSX below).\n  const [inputUsername, setInputUsername] = useState(username);\n  const [inputEmail, setInputEmail] = useState(email);\n  const [inputPassword, setInputPassword] = useState(password);\n\n  // These state variables control whether or not we show\n  // the success and error message sections after making\n  // a network request (see JSX below).\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n  // This useEffect hook automatically hides the\n  // success and error messages after 3 seconds when they're shown.\n  // Just a little user interface improvement.\n  useEffect(() => {\n    if (showSuccessMessage || showErrorMessage) {\n      setTimeout(() => {\n        setShowSuccessMessage(false);\n        setShowErrorMessage(false);\n      }, 3000);\n    }\n  }, [showSuccessMessage, showErrorMessage]);\n  const saveChanges = async () => {\n    const response = await fetch(`/api/users/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        username: inputUsername,\n        email: inputEmail,\n        password: inputPassword\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n  const logOut = () => {\n    // We'll want to log the user out here\n    // and send them to the \"login page\"\n    setToken(null);\n    navigate('/login');\n  };\n  const resetValues = () => {\n    // Reset the text input values to\n    // their starting values (the data we loaded from the server)\n    setInputUsername(username);\n    setInputEmail(email);\n    setInputPassword(password);\n  };\n\n  // And here we have the JSX for our component. It's pretty straightforward\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Info for \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      children: \"Successfully saved user data!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), showErrorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fail\",\n      children: \"Uh oh... something went wrong and we couldn't save changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setInputUsername(e.target.value),\n        value: inputUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setInputEmail(e.target.value),\n        value: inputEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setInputPassword(e.target.value),\n        value: inputPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveChanges,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetValues,\n      children: \"Reset Values\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logOut,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(UserInfoPage, \"moXCJr5OZbEZ9lhycYny/wKaaj8=\", false, function () {\n  return [useToken, useUser, useNavigate];\n});\n_c = UserInfoPage;\nvar _c;\n$RefreshReg$(_c, \"UserInfoPage\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useToken","useUser","jsxDEV","_jsxDEV","UserInfoPage","_s","setToken","user","id","username","email","password","navigate","inputUsername","setInputUsername","inputEmail","setInputEmail","inputPassword","setInputPassword","showSuccessMessage","setShowSuccessMessage","showErrorMessage","setShowErrorMessage","setTimeout","saveChanges","response","fetch","method","body","JSON","stringify","headers","logOut","resetValues","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["/media/nvme0n1p3/My Projects/Full_Stack/Auth/front-end/src/pages/UserInfoPage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useToken } from '../auth/useToken';\nimport { useUser } from '../auth/useUser';\n\nexport const UserInfoPage = () => {\n  const [, setToken] = useToken();\n  const [user] = useUser();\n\n  const { id, username, email, password } = user;\n\n  // We'll use the navigate function to navigate the user\n  // programmatically later on (we're not using it yet)\n  const navigate = useNavigate();\n\n  // These states are bound to the values of the text inputs\n  // on the page (see JSX below).\n  const [inputUsername, setInputUsername] = useState(username);\n  const [inputEmail, setInputEmail] = useState(email);\n  const [inputPassword, setInputPassword] = useState(password);\n\n  // These state variables control whether or not we show\n  // the success and error message sections after making\n  // a network request (see JSX below).\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n  // This useEffect hook automatically hides the\n  // success and error messages after 3 seconds when they're shown.\n  // Just a little user interface improvement.\n  useEffect(() => {\n    if (showSuccessMessage || showErrorMessage) {\n      setTimeout(() => {\n        setShowSuccessMessage(false);\n        setShowErrorMessage(false);\n      }, 3000);\n    }\n  }, [showSuccessMessage, showErrorMessage]);\n\n  const saveChanges = async () => {\n    const response = await fetch(`/api/users/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        username: inputUsername,\n        email: inputEmail,\n        password: inputPassword,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n  };\n\n  const logOut = () => {\n    // We'll want to log the user out here\n    // and send them to the \"login page\"\n    setToken(null);\n    navigate('/login');\n  };\n\n  const resetValues = () => {\n    // Reset the text input values to\n    // their starting values (the data we loaded from the server)\n    setInputUsername(username);\n    setInputEmail(email);\n    setInputPassword(password);\n  };\n\n  // And here we have the JSX for our component. It's pretty straightforward\n  return (\n    <div className=\"content-container\">\n      <h1>Info for {username}</h1>\n      {showSuccessMessage && (\n        <div className=\"success\">Successfully saved user data!</div>\n      )}\n      {showErrorMessage && (\n        <div className=\"fail\">\n          Uh oh... something went wrong and we couldn't save changes\n        </div>\n      )}\n      <label>\n        Username:\n        <input\n          onChange={(e) => setInputUsername(e.target.value)}\n          value={inputUsername}\n        />\n      </label>\n      <label>\n        Email:\n        <input\n          onChange={(e) => setInputEmail(e.target.value)}\n          value={inputEmail}\n        />\n      </label>\n      <label>\n        Password:\n        <input\n          onChange={(e) => setInputPassword(e.target.value)}\n          value={inputPassword}\n        />\n      </label>\n      <hr />\n      <button onClick={saveChanges}>Save Changes</button>\n      <button onClick={resetValues}>Reset Values</button>\n      <button onClick={logOut}>Log Out</button>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}