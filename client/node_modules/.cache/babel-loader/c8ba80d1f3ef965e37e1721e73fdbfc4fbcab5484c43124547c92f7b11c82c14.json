{"ast":null,"code":"var _jsxFileName = \"/media/nvme0n1p3/My Projects/Full_Stack/Auth/front-end/src/pages/EmailVerfication.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useToken } from '../auth/useToken';\nimport { EmailVerficationFail } from './EmailVerficationFail';\nimport { EmailVerficationSuccess } from './EmailVerficationSuccess';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EmailVerfication = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('Verfication Failed, Please try again');\n  const [, setToken] = useToken();\n  const {\n    verificationCode\n  } = useParams();\n  useEffect(() => {\n    const verifyEmail = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.put(`http://localhost:8080/api/verify-email`, {\n          verificationCode\n        });\n        const {\n          token\n        } = response.data;\n        setToken(token);\n        setIsSuccess(true);\n      } catch (error) {\n        setErrorMessage(error.response.data.message);\n        setIsSuccess(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    verifyEmail();\n  }, [verificationCode]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 25\n  }, this);\n  if (!isSuccess) return /*#__PURE__*/_jsxDEV(EmailVerficationFail, {\n    msg: errorMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(EmailVerficationSuccess, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n_s(EmailVerfication, \"0VClP7uTdK8+1weg+ZRRP2fS5Ns=\", false, function () {\n  return [useToken, useParams];\n});\n_c = EmailVerfication;\nvar _c;\n$RefreshReg$(_c, \"EmailVerfication\");","map":{"version":3,"names":["axios","useEffect","useState","useParams","useToken","EmailVerficationFail","EmailVerficationSuccess","jsxDEV","_jsxDEV","EmailVerfication","_s","isLoading","setIsLoading","isSuccess","setIsSuccess","errorMessage","setErrorMessage","setToken","verificationCode","verifyEmail","response","put","token","data","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","_c","$RefreshReg$"],"sources":["/media/nvme0n1p3/My Projects/Full_Stack/Auth/front-end/src/pages/EmailVerfication.js"],"sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useToken } from '../auth/useToken';\nimport { EmailVerficationFail } from './EmailVerficationFail';\nimport { EmailVerficationSuccess } from './EmailVerficationSuccess';\n\nexport const EmailVerfication = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\n    'Verfication Failed, Please try again'\n  );\n  const [, setToken] = useToken();\n  const { verificationCode } = useParams();\n\n  useEffect(() => {\n    const verifyEmail = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.put(\n          `http://localhost:8080/api/verify-email`,\n          {\n            verificationCode,\n          }\n        );\n        const { token } = response.data;\n        setToken(token);\n        setIsSuccess(true);\n      } catch (error) {\n        setErrorMessage(error.response.data.message);\n        setIsSuccess(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    verifyEmail();\n  }, [verificationCode]);\n\n  if (isLoading) return <div>Loading...</div>;\n  if (!isSuccess) return <EmailVerficationFail msg={errorMessage} />;\n  return <EmailVerficationSuccess />;\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,SAASC,uBAAuB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAC9C,sCACF,CAAC;EACD,MAAM,GAAGe,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAC/B,MAAM;IAAEc;EAAiB,CAAC,GAAGf,SAAS,CAAC,CAAC;EAExCF,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BP,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMQ,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAC9B,wCAAwC,EACxC;UACEH;QACF,CACF,CAAC;QACD,MAAM;UAAEI;QAAM,CAAC,GAAGF,QAAQ,CAACG,IAAI;QAC/BN,QAAQ,CAACK,KAAK,CAAC;QACfR,YAAY,CAAC,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdR,eAAe,CAACQ,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACE,OAAO,CAAC;QAC5CX,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,SAAS;QACRF,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IACDO,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACD,gBAAgB,CAAC,CAAC;EAEtB,IAAIP,SAAS,EAAE,oBAAOH,OAAA;IAAAkB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C,IAAI,CAACjB,SAAS,EAAE,oBAAOL,OAAA,CAACH,oBAAoB;IAAC0B,GAAG,EAAEhB;EAAa;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAClE,oBAAOtB,OAAA,CAACF,uBAAuB;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpC,CAAC;AAACpB,EAAA,CAnCWD,gBAAgB;EAAA,QAMNL,QAAQ,EACAD,SAAS;AAAA;AAAA6B,EAAA,GAP3BvB,gBAAgB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}