{"ast":null,"code":"var _s = $RefreshSig$();\n/*\n    This is just a nice custom hook that we can\n    use to get all the query parameters from inside\n    our components. Don't worry about the details\n    unless you're curious :)\n*/\n\nimport { useLocation } from 'react-router-dom';\nconst pairs = arr => arr.reduce((acc, x, i) => {\n  if (i % 2 === 0) {\n    return [...acc, [x]];\n  } else {\n    const last = acc[acc.length - 1];\n    const everythingElse = acc.slice(0, acc.length - 1);\n    return [...everythingElse, [...last, x]];\n  }\n}, [])[0] || [];\nconst fold = arr => pairs(arr).reduce((acc, pair) => {\n  return {\n    ...acc,\n    [pair[0]]: pair[1]\n  };\n}, {});\nexport const useQueryParams = () => {\n  _s();\n  const location = useLocation();\n  const currentParamsObj = new URLSearchParams(location.search);\n  const params = fold([...currentParamsObj.entries()]);\n  console.log('params', params);\n  return params;\n};\n_s(useQueryParams, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});","map":{"version":3,"names":["useLocation","pairs","arr","reduce","acc","x","i","last","length","everythingElse","slice","fold","pair","useQueryParams","_s","location","currentParamsObj","URLSearchParams","search","params","entries","console","log"],"sources":["/media/nvme0n1p3/My Projects/Full_Stack/Auth/front-end/src/util/useQueryParams.js"],"sourcesContent":["/*\n    This is just a nice custom hook that we can\n    use to get all the query parameters from inside\n    our components. Don't worry about the details\n    unless you're curious :)\n*/\n\nimport { useLocation } from 'react-router-dom';\n\nconst pairs = (arr) =>\n  arr.reduce((acc, x, i) => {\n    if (i % 2 === 0) {\n      return [...acc, [x]];\n    } else {\n      const last = acc[acc.length - 1];\n      const everythingElse = acc.slice(0, acc.length - 1);\n      return [...everythingElse, [...last, x]];\n    }\n  }, [])[0] || [];\n\nconst fold = (arr) =>\n  pairs(arr).reduce((acc, pair) => {\n    return {\n      ...acc,\n      [pair[0]]: pair[1],\n    };\n  }, {});\n\nexport const useQueryParams = () => {\n  const location = useLocation();\n  const currentParamsObj = new URLSearchParams(location.search);\n  const params = fold([...currentParamsObj.entries()]);\n\n  console.log('params', params);\n  return params;\n};\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,KAAK,GAAIC,GAAG,IAChBA,GAAG,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,EAAEC,CAAC,KAAK;EACxB,IAAIA,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IACf,OAAO,CAAC,GAAGF,GAAG,EAAE,CAACC,CAAC,CAAC,CAAC;EACtB,CAAC,MAAM;IACL,MAAME,IAAI,GAAGH,GAAG,CAACA,GAAG,CAACI,MAAM,GAAG,CAAC,CAAC;IAChC,MAAMC,cAAc,GAAGL,GAAG,CAACM,KAAK,CAAC,CAAC,EAAEN,GAAG,CAACI,MAAM,GAAG,CAAC,CAAC;IACnD,OAAO,CAAC,GAAGC,cAAc,EAAE,CAAC,GAAGF,IAAI,EAAEF,CAAC,CAAC,CAAC;EAC1C;AACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AAEjB,MAAMM,IAAI,GAAIT,GAAG,IACfD,KAAK,CAACC,GAAG,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEQ,IAAI,KAAK;EAC/B,OAAO;IACL,GAAGR,GAAG;IACN,CAACQ,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC;EACnB,CAAC;AACH,CAAC,EAAE,CAAC,CAAC,CAAC;AAER,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,gBAAgB,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EAC7D,MAAMC,MAAM,GAAGR,IAAI,CAAC,CAAC,GAAGK,gBAAgB,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC;EAEpDC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,MAAM,CAAC;EAC7B,OAAOA,MAAM;AACf,CAAC;AAACL,EAAA,CAPWD,cAAc;EAAA,QACRb,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}