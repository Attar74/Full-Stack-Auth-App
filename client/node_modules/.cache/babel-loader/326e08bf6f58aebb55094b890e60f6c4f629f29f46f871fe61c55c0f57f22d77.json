{"ast":null,"code":"var _jsxFileName = \"/media/nvme0n1p3/My Projects/Full_Stack/Auth/front-end/src/pages/EmailVerfication.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useToken } from '../auth/useToken';\nimport { EmailVerificationFail } from '../components/EmailVerificationFail';\nimport { EmailVerificationSuccess } from '../components/EmailVerificationSuccess';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EmailVerfication = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [, setToken] = useToken();\n  const {\n    verificationCode\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const verifyEmail = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.put(`http://localhost:8080/api/verify-email/${verificationCode}`);\n        const {\n          token\n        } = response.data;\n        setToken(token);\n        setIsSuccess(true);\n      } catch (error) {\n        setIsSuccess(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    verifyEmail();\n  }, [verificationCode]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 25\n  }, this);\n  if (!isSuccess) return /*#__PURE__*/_jsxDEV(EmailVerificationFail, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(EmailVerificationSuccess, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n_s(EmailVerfication, \"CBsj79ddnAE0+v/7MO9v+ZZAi+s=\", false, function () {\n  return [useToken, useParams, useNavigate];\n});\n_c = EmailVerfication;\nvar _c;\n$RefreshReg$(_c, \"EmailVerfication\");","map":{"version":3,"names":["axios","useEffect","useState","useNavigate","useParams","useToken","EmailVerificationFail","EmailVerificationSuccess","jsxDEV","_jsxDEV","EmailVerfication","_s","isLoading","setIsLoading","isSuccess","setIsSuccess","setToken","verificationCode","navigate","verifyEmail","response","put","token","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/nvme0n1p3/My Projects/Full_Stack/Auth/front-end/src/pages/EmailVerfication.js"],"sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useToken } from '../auth/useToken';\nimport { EmailVerificationFail } from '../components/EmailVerificationFail';\nimport { EmailVerificationSuccess } from '../components/EmailVerificationSuccess';\n\nexport const EmailVerfication = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [, setToken] = useToken();\n  const { verificationCode } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const verifyEmail = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.put(\n          `http://localhost:8080/api/verify-email/${verificationCode}`\n        );\n        const { token } = response.data;\n        setToken(token);\n        setIsSuccess(true);\n      } catch (error) {\n        setIsSuccess(false);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    verifyEmail();\n  }, [verificationCode]);\n\n  if (isLoading) return <div>Loading...</div>;\n  if (!isSuccess) return <EmailVerificationFail />;\n  return <EmailVerificationSuccess />;\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,qBAAqB,QAAQ,qCAAqC;AAC3E,SAASC,wBAAwB,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElF,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,GAAGc,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAC/B,MAAM;IAAEY;EAAiB,CAAC,GAAGb,SAAS,CAAC,CAAC;EACxC,MAAMc,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BN,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMO,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAC9B,0CAA0CJ,gBAAgB,EAC5D,CAAC;QACD,MAAM;UAAEK;QAAM,CAAC,GAAGF,QAAQ,CAACG,IAAI;QAC/BP,QAAQ,CAACM,KAAK,CAAC;QACfP,YAAY,CAAC,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdT,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,SAAS;QACRF,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IACDM,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,gBAAgB,CAAC,CAAC;EAEtB,IAAIL,SAAS,EAAE,oBAAOH,OAAA;IAAAgB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C,IAAI,CAACf,SAAS,EAAE,oBAAOL,OAAA,CAACH,qBAAqB;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAChD,oBAAOpB,OAAA,CAACF,wBAAwB;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrC,CAAC;AAAClB,EAAA,CA7BWD,gBAAgB;EAAA,QAGNL,QAAQ,EACAD,SAAS,EACrBD,WAAW;AAAA;AAAA2B,EAAA,GALjBpB,gBAAgB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}